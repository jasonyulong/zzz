<?php
/**
 * Created by PhpStorm.
 * User: abc
 * Date: 2018/3/22
 * Time: 15:31
 */

namespace app\admin\controller;

use app\common\controller\Admin;
use app\common\model\Article as ArticleModel;
use app\common\model\ArticleRep;
use app\common\model\Sort as SortModel;
use think\paginator;

class Article extends Admin
{

    public $sortlist;

    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        if(!in_array("01",$this->userinfo['roleary'])) $this->error('没有权限');
    }
    function index(){
        $this->sortlist=db('Sort')->select();

        $where=array();
        $title=input('get.title');
        $this->assign("title",$title);
        if(!empty($title)){
            $where['title']	=	['like','%'.$title.'%'];
        }
        $id=input('get.id');
        $this->assign("id",$id);
        if(!empty($id)){
            $where['id']	=	$id;
        }

        $list=db('Article')->field('id,title,sort,look,time')->where($where)->order('id desc')->paginate(10,false,['query'=>request()->param()]);
        $list->each((function($item, $key){
            foreach($this->sortlist as $v){
                if($item['sort']==$v['id']){
                    $item['sortname']=$v['name'];
                }
            }
            return $item;
        }));
        $this->assign("list",$list);
        return $this->fetch();
    }
    function edit(){
        if($this->request->isPost()){
            $data=input('post.');
            $validate = validate('Article');
            if(!$validate->scene('edit')->check($data)){
                $this->error($validate->getError());
            }

            //图片上传
            $file = $this->request->file('picfile');
            if(!empty($file)){
                $oldpicurl='.'.db('Article')->where(array('id'=>$data['id']))->value('pic');
                $file->validate(['size' =>1024*1024*2, 'ext' => 'jpg,png,gif']);   //2M
                $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads/article');
                if ($info) {
                    $data['pic'] = '/uploads/article/' . $info->getSaveName();
                    pic_suo($data['pic'],false,480,288);
                    if(strlen($oldpicurl)>3&&file_exists($oldpicurl)){
                        @unlink($oldpicurl);
                        @unlink(pic_suo($oldpicurl,true));
                    }
                } else {
                    $this->error($file->getError());
                }
            }

            //文件上传
            $file = $this->request->file('file');
            if(!empty($file)){
                $oldpicurl='.'.db('Article')->where(array('id'=>$data['id']))->value('file');
                $file->validate(['size' =>1024*1024*2, 'ext' => 'doc,docx,xls']);   //2M
                $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads/file');
                if ($info) {
                    $data['file'] = '/uploads/file/' . $info->getSaveName();
                    if(strlen($oldpicurl)>3&&file_exists($oldpicurl)) unlink($oldpicurl);
                } else {
                    $this->error($file->getError());
                }
            }

            $mod=new ArticleModel();
            $mod->allowField(true)->isUpdate()->save($data);
            $this->success("修改成功", url("admin/article/index"),'',0);
        }else{
            $info=db('Sort')->field('id,name,pid')->select();
            $list=\ClassTree::hTree($info);
            $this->assign("list",$list);

            $info=db('Article')->where(array('id'=>input('id', '', 'trim,intval')))->find();
            $this->assign('info',$info);
            return $this->fetch();
        }
    }
    function add(){
        if($this->request->isPost()){
            $data=input('post.');
            $validate = validate('Article');
            if(!$validate->scene('add')->check($data)){
                $this->error($validate->getError());
            }

            //图片上传
            $file = $this->request->file('picfile');
            if(!empty($file)){
                $file->validate(['size' =>1024*1024*2, 'ext' => 'jpg,png,gif']);   //2M
                $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads/article');
                if ($info) {
                    $data['pic'] = '/uploads/article/' . $info->getSaveName();
                    pic_suo($data['pic'],false,480,288);
                } else {
                    $this->error($file->getError());
                }
            }
            if(empty($data['pic'])) $data['pic']='';

            //文件上传
            $file = $this->request->file('file');
            if(!empty($file)){
                $file->validate(['size' =>1024*1024*2, 'ext' => 'doc,docx,xls']);   //2M
                $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads/file');
                if ($info) {
                    $data['file'] = '/uploads/file/' . $info->getSaveName();
                } else {
                    $this->error($file->getError());
                }
            }
            if(empty($data['file'])) $data['file']='';

            $data['look']=0;
            $data['time']=time();
            $mod=new ArticleModel();
            $result=$mod->add($data);
            if($result !== false){
                $this->success("添加成功", url("admin/article/index"),'',0);
            }else{
                $this->error($mod->getError());
            }
        }else{
            $info=db('Sort')->field('id,name,pid')->select();
            if(empty($info)){
                $this->success("请先添加内容分类", url("admin/article/sort_add"),'',3);
            }
            $list=\ClassTree::hTree($info);
            $this->assign("list",$list);
            return $this->fetch();
        }
    }
    public function del(){
        $id=input('id', '', 'trim,intval');
        $mod=new ArticleModel();
        $result=$mod->del($id);
        if($result==1){
            $this->success("删除成功", url("admin/article/index"),'',0);
        }else{
            $this->error('删除失败');
        }
    }
    function upload()
    {
        $files = $this->request->file();
        $jsonlog['errno']=0;
        if($files){
            foreach($files as $file){
                $file->validate(['size'=>1024*1024*2,'ext'=>'jpg,png,gif']);  //1M
                $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads/article');
                if($info){
                    $jsonlog['data'][]='/uploads/article/'.$info->getSaveName();
                }
            }
        }
        echo(json_encode($jsonlog));
    }



    function rep_index(){
        $where=array();
        $title=input('get.title');
        $this->assign("title",$title);
        if(!empty($title)){
            $tid[]=0;
            $tlist=db("Article")->field("id")->where(array("title"=>['like','%'.$title.'%']))->select();
            if($tlist){
                foreach($tlist as $v){
                    $tid[]=$v["id"];
                }
            }
            $where['article_id']=array('in',implode(",",$tid));
        }
        $id=input('get.id');
        $this->assign("id",$id);
        if(!empty($id)){
            $where['article_id']	=	$id;
        }

        $list=db('ArticleRep')->where($where)->order('view asc,id desc')->paginate(10,false,['query'=>request()->param()]);
        $list->each((function($item, $key){
            $item['article']=db('Article')->field("id,title")->where(array('id'=>$item["article_id"]))->find();
            if($item["member_id"]==0){
                $item["member"]['id']=0;
                $item["member"]['username']="未登录用户";
            }else{
                $item["member"]=db('Member')->field("id,username")->where(array('id'=>$item["member_id"]))->find();
                if(empty($item["member"])) {
                    $item["member"]['id'] = 0;
                    $item["member"]['username'] = "用户被删除";
                }
            }
            return $item;
        }));
        $this->assign("list",$list);
        return $this->fetch();
    }
    public function rep_del(){
        $id=input('id', '', 'trim,intval');
        $mod=new ArticleRep();
        $result=$mod->del($id);

        if($result==1){
            $this->success("删除成功", url("admin/article/rep_index"),'',0);
        }else{
            $this->error('删除失败');
        }
    }
    public function rep_view(){
        $id=input('id', '', 'trim,intval');
        db("ArticleRep")->where(array("id"=>$id))->update(array("view"=>1));
        $this->success("操作成功", url("admin/article/rep_index"),'',0);
    }



    function sort_index(){
        $info=db('Sort')->field('id,name,pid')->select();
        $list=\ClassTree::hTree($info);
        $this->assign("list",$list);
        return $this->fetch();
    }
    public function sort_edit(){
        if($this->request->isPost()){
            $data=input('post.');
            $validate = validate('Sort');
            if(!$validate->scene('edit')->check($data)){
                $this->error($validate->getError());
            }
            $mod=new SortModel();
            $mod->allowField(true)->isUpdate()->save($data);
            $this->success("修改成功", url("admin/article/sort_index"),'',0);
        }else{
            $id=input('id', '', 'trim,intval');
            $info=db('sort')->where(array('id'=>$id))->find();
            $this->assign("info",$info);
            return $this->fetch();
        }
    }
    public function sort_del(){
        $mod=new SortModel();
        $result=$mod->del(input('id', '', 'trim,intval'));
        if($result==1){
            $this->success("删除成功", url("admin/article/sort_index"),'',0);
        }else{
            if($result==-1){
                $this->error('请先删除子类或文章');
            }else{
                $this->error('删除失败');
            }
        }
    }
    public function sort_add()
    {
        if($this->request->isPost()){
            $data=input('post.');
            $validate = validate('Sort');
            if(!$validate->scene('add')->check($data)){
                $this->error($validate->getError());
            }

            $mod=new SortModel();
            $result=$mod->add($data);
            if($result !== false){
                $this->success("添加成功", url("admin/article/sort_index"),'',0);
            }else{
                $this->error($mod->getError());
            }
        }else {
            $pid=input('pid');
            if(empty($pid)) $pid=0;
            $this->assign("pid",$pid);
            return $this->fetch();
        }
    }
}